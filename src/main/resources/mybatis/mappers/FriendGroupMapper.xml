<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.allen.imsystem.mappers.FriendGroupMapper">

    <resultMap id="friendGroupMap" type="com.allen.imsystem.model.dto.FriendGroup">
        <result property="groupId" column="id"/>
        <result property="groupName" column="fri_group_name"/>
        <result property="groupSize" column="size"/>
        <result property="isDefault" column="is_default" jdbcType="TINYINT" javaType="java.lang.Boolean"/>
        <result property="status" column="status" jdbcType="TINYINT" javaType="java.lang.Boolean"/>
    </resultMap>

    <resultMap id="friendGroupWithSizeMap" type="com.allen.imsystem.model.dto.FriendGroup">
        <result property="groupId" column="id"/>
        <result property="groupName" column="fri_group_name"/>
        <result property="groupSize" column="size"/>
        <result property="isDefault" column="is_default" jdbcType="TINYINT" javaType="java.lang.Boolean"/>
        <result property="status" column="status" jdbcType="TINYINT" javaType="java.lang.Boolean"/>
    </resultMap>

    <resultMap id="friendGroupPojoMap" type="com.allen.imsystem.model.pojo.FriendGroupPojo">
        <result property="groupId" column="id"/>
        <result property="friendGroupName" column="fri_group_name"/>
        <result property="uid" column="uid"/>
        <result property="status" column="status" javaType="java.lang.Boolean" jdbcType="TINYINT"/>
        <result property="size" column="size"/>
        <result property="isDefault" column="is_default" javaType="java.lang.Boolean" jdbcType="TINYINT"/>
    </resultMap>

    <!-- 查询某用户的好友分组列表   -->
    <select id="selectFriendGroupList" resultMap="friendGroupMap">
        SELECT id,fri_group_name,is_default,`size`,`status`
        FROM friend_group where uid=#{uid} and status = 1
    </select>

    <!--  根据某用户的好友分组名查询该分组的id  -->
    <select id="selectGroupId" resultType="java.lang.Integer">
        SELECT id FROM friend_group where status = 1 and uid=#{uid} and fri_group_name=#{groupName} and `status`=1
    </select>

    <!--  查询某个好友分组的状态  -->
    <select id="isGroupValid" resultType="java.lang.Boolean">
        SELECT status FROM friend_group WHERE id = #{groupId}
    </select>

    <!--  查询好友分组列表，并且统计每一个分组的好友数  -->
    <select id="selectFriendGroupListWithSize" resultMap="friendGroupWithSizeMap">
        SELECT id,fri_group_name,is_default,`size`,`status`
        FROM friend_group as fg where fg.status=1 and uid = #{uid}
        order by id
    </select>

    <!--  统计此好友分组的好友数  -->
    <select id="selectGroupSize" resultType="java.lang.Integer">
        SELECT (SELECT count(*) from friend
        WHERE friend.uid_a = #{uid} AND b_in_a_fgroup_id = #{groupId} AND a_delete_b=0)
        +
        (SELECT count(*) from friend
        WHERE friend.uid_b = #{uid} AND a_in_b_fgroup_id = #{groupId} AND b_delete_a=0) as 'size'
    </select>

    <!--  查询某用户的默认好友分组  -->
    <select id="selectUserDefaultFriendGroup" resultMap="friendGroupPojoMap">
        SELECT * FROM friend_group WHERE is_default = 1 AND uid=#{uid} AND status = 1
    </select>

    <!--  更新好友分组名  -->
    <update id="updateFriendGroupName" >
        UPDATE friend_group set fri_group_name=#{groupName} WHERE id=#{groupId} and uid=#{uid} and status=1
    </update>

    <!--  删除好友分组 将状态位置零，人数置零 -->
    <update id="deleteFriendGroup">
        UPDATE friend_group SET status=0, `size`=0 WHERE id=#{groupId} and uid=#{uid}
    </update>

    <!--  把某个分组的所有好友移到默认分组  -->
    <update id="moveGroupFriendToDefaultGroup">
        update friend as f set f.a_in_b_fgroup_id= #{defaultGroupId} WHERE f.a_in_b_fgroup_id= #{groupId} and f.uid_b = #{uid};
        update friend as f set f.b_in_a_fgroup_id= #{defaultGroupId} WHERE f.b_in_a_fgroup_id= #{groupId} AND f.uid_a = #{uid}
    </update>

    <!--  把某个好友移到另一个分组  -->
    <update id="moveFriendToAnotherGroup">
        update friend as f set f.b_in_a_fgroup_id = #{newGroupId} WHERE f.uid_a = #{uid} and f.uid_b = #{friendId} and f.b_in_a_fgroup_id = #{oldGroupId};
        update friend as f set f.a_in_b_fgroup_id = #{newGroupId} WHERE f.uid_b = #{uid} and f.uid_a = #{friendId} and f.a_in_b_fgroup_id = #{oldGroupId}
    </update>

    <!--  插入新的好友分组  -->
    <insert id="insertNewFriendGroup" useGeneratedKeys="true">
        INSERT INTO friend_group (uid,fri_group_name,is_default, `size`)
        VALUES (#{uid},#{groupName},#{isDefault}, #{size})
    </insert>

    <select id="selectById" resultMap="friendGroupPojoMap">
        select * from friend_group fg where fg.id = #{id} and fg.status=1
    </select>

    <select id="selectAll" resultMap="friendGroupPojoMap">
        select * from friend_group fg where fg.status=1
    </select>

    <insert id="insert" keyColumn="id" keyProperty="groupId" parameterType="com.allen.imsystem.model.pojo.FriendGroupPojo" useGeneratedKeys="true">
        insert into friend_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                `uid`,
            </if>
            <if test="friendGroupName != null">
                fri_group_name,
            </if>
            <if test="isDefault != null">
                is_default,
            </if>
            <if test="status != null">
                `status`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=VARCHAR},
            </if>
            <if test="friendGroupName != null">
                #{friendGroupName,jdbcType=VARCHAR},
            </if>
            <if test="isDefault != null">
                #{isDefault,jdbcType=BOOLEAN},
            </if>
            <if test="size != null">
                #{size,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=BOOLEAN},
            </if>
        </trim>
    </insert>

    <update id="updateById" parameterType="com.allen.imsystem.model.pojo.FriendGroupPojo">
        update friend_group
        <set>
            <if test="uid != null">
                `uid` = #{uid,jdbcType=VARCHAR},
            </if>
            <if test="friendGroupName != null">
                fri_group_name = #{friendGroupName,jdbcType=VARCHAR},
            </if>
            <if test="isDefault != null">
                is_default = #{isDefault,jdbcType=BOOLEAN},
            </if>
            <if test="size != null">
                `size` = #{size,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=BOOLEAN},
            </if>
        </set>
        where id = #{groupId,jdbcType=INTEGER}
    </update>
</mapper>