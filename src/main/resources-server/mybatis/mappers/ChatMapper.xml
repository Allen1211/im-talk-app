<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.allen.imsystem.dao.mappers.ChatMapper">

    <resultMap id="chatSessionDTOMap" type="com.allen.imsystem.model.dto.ChatSessionDTO">
        <result property="talkId" column="chat_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="talkTitle" column="username" />
        <result property="avatar" column="icon_id" />
        <result property="lastMessage" column="content"/>
        <result property="isGroup" column="isGroup" jdbcType="TINYINT" javaType="java.lang.Boolean"/>
        <result property="lastMessageDate" column="created_time" />
        <result property="friendId" column="uid"/>
    </resultMap>

    <resultMap id="privateChatInfoMap" type="com.allen.imsystem.model.pojo.PrivateChat">
        <result property="chatId" column="chat_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="uidA" column="uid_a" />
        <result property="uidB" column="uid_b" />
        <result property="userAStatus" column="user_a_status" />
        <result property="userBStatus" column="user_b_status" />
        <result property="lastMsgId" column="last_msg_id"/>
        <result property="lastSenderId" column="last_sender_id" />
        <result property="createdTime" column="created_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap id="chatGroupInfoMap" type="com.allen.imsystem.model.pojo.ChatGroup">
        <result property="groupId" column="group_id"/>
        <result property="groupName" column="group_name"/>
        <result property="ownerId" column="owner_id"/>
        <result property="avatar" column="avatar"/>
        <result property="chatId" column="chatId" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="status" column="status" jdbcType="TINYINT" javaType="java.lang.Boolean"/>
        <result property="createdTIme" column="created_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap id="chatNewMsgSizeMap" type="com.allen.imsystem.model.dto.ChatNewMsgSizeDTO">
        <result property="talkId" column="chat_id"/>
        <result property="size" column="new_msg_size"/>
    </resultMap>

    <resultMap id="privateMsgRecordMap" type="com.allen.imsystem.model.dto.MsgRecord">
        <result property="messageId" column="msg_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result property="msgType" column="msg_type"/>
        <result property="messageText" column="content"/>
        <result property="msgTimeDate" column="created_time"/>
        <result property="messageImgUrl" column="resource_url"/>
        <association property="userInfo" resultMap="userInfoMap"/>
        <association property="fileInfo" resultMap="fileInfoMap"/>
    </resultMap>

    <resultMap id="privateChatDataMap" type="com.allen.imsystem.model.dto.ChatSessionInfo">
        <result property="talkId" column="chat_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="title" column="username"/>
        <result property="srcId" column="src_id"/>
        <result property="destId" column="dest_id"/>
    </resultMap>

    <resultMap id="userInfoMap" type="com.allen.imsystem.model.dto.UserInfoDTO">
        <result property="uid" column="uid"/>
        <result property="username" column="username"/>
        <result property="avatar" column="icon_id"/>
    </resultMap>

    <resultMap id="fileInfoMap" type="com.allen.imsystem.model.dto.MsgFileInfo">
        <result property="fileName" column="content"/>
        <result property="downloadUrl" column="resource_url"/>
    </resultMap>

<!--    <resultMap id="groupChatMap" type="com.allen.imsystem.model.dto.ChatSessionDTO">-->
<!--        <result property="charId" column="chat_id" jdbcType="bigint" javaType="java.lang.Long"/>-->
<!--        <result property="avatar" column="icon_id" jdbcType="varchar" javaType="java.lang.String"/>-->
<!--        <result property="lastMsgContent" column="content"/>-->
<!--        <result property="isGroupChat" column="isGroup" jdbcType="tinyint" javaType="java.lang.Boolean"/>-->
<!--        <result property="lastMsgTime" column="created_time" jdbcType="datetime" javaType="java.util.Date"/>-->
<!--    </resultMap>-->


    <select id="selectPrivateChatList" resultMap="chatSessionDTOMap">
        (SELECT pc.chat_id, ui.username,ui.uid,
        CONCAT('${@com.allen.imsystem.common.Const.GlobalConst$Path@AVATAR_URL}',ui.icon_id) as icon_id,
        pmr.content, pmr.created_time, 0 as is_group
        FROM private_chat as pc
        LEFT JOIN user_info as ui ON pc.uid_b = ui.uid
        LEFT JOIN pri_msg_record as pmr ON pmr.msg_id = pc.last_msg_id
        WHERE (pc.uid_a = #{uid} AND pc.user_a_status=1) )
        UNION ALL
        (SELECT pc.chat_id,ui.username,ui.uid,
        CONCAT('${@com.allen.imsystem.common.Const.GlobalConst$Path@AVATAR_URL}',ui.icon_id) as icon_id,
        pmr.content, pmr.created_time, 0 as is_group
        FROM private_chat as pc
        LEFT JOIN user_info as ui ON pc.uid_a = ui.uid
        LEFT JOIN pri_msg_record as pmr ON pmr.msg_id = pc.last_msg_id
        WHERE (pc.uid_b = #{uid} AND pc.user_b_status=1) )
        ORDER BY created_time DESC
    </select>

    <select id="selectNewMsgPrivateChatData" resultMap="chatSessionDTOMap">
        SELECT pc.chat_id, ui.username,ui.uid,
        CONCAT('${@com.allen.imsystem.common.Const.GlobalConst$Path@AVATAR_URL}',ui.icon_id) as icon_id,
        pmr.content, pmr.created_time, 0 as is_group
        FROM private_chat as pc
        LEFT JOIN user_info as ui ON ui.uid = #{friendId}
        LEFT JOIN pri_msg_record as pmr ON pmr.msg_id = pc.last_msg_id
        WHERE pc.chat_id = #{chatId} AND pc.uid_a = #{uid}
        UNION ALL
        SELECT pc.chat_id, ui.username,ui.uid,
        CONCAT('${@com.allen.imsystem.common.Const.GlobalConst$Path@AVATAR_URL}',ui.icon_id) as icon_id,
        pmr.content, pmr.created_time, 0 as is_group
        FROM private_chat as pc
        LEFT JOIN user_info as ui ON ui.uid = #{friendId}
        LEFT JOIN pri_msg_record as pmr ON pmr.msg_id = pc.last_msg_id
        WHERE pc.chat_id = #{chatId} AND pc.uid_b = #{uid}
    </select>

    <select id="selectPrivateChatHistoryMsg" resultMap="privateMsgRecordMap">
        SELECT msg_id , msg_type, content, resource_url, mr.created_time ,ui.uid, ui.username,
        CONCAT('${@com.allen.imsystem.common.Const.GlobalConst$Path@AVATAR_URL}',ui.icon_id) as icon_id
        FROM pri_msg_record as mr
        INNER JOIN user_info as ui ON ui.uid = mr.from_uid
        WHERE mr.chat_id = #{chatId} AND mr.created_time &lt; #{beginTime}
        ORDER BY mr.created_time DESC
        LIMIT #{pageBean.from},#{pageBean.offset}
    </select>

    <select id="selectPrivateChatInfoByUid" resultMap="privateChatInfoMap">
        SELECT * FROM private_chat WHERE uid_a=#{uidA} AND uid_b=#{uidB} LIMIT 1
    </select>


    <select id="selectPrivateChatInfoByChatId" resultMap="privateChatInfoMap">
        SELECT * FROM private_chat WHERE chat_id = #{chatId} LIMIT 1
    </select>

    <select id="countPrivateChatUnReadMsgForUser" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM pri_msg_record WHERE chat_id = #{chatId} AND to_uid = #{uid} AND has_read=0
    </select>

    <select id="selectPrivateChatData" resultMap="privateChatDataMap">
        SELECT pc.chat_id,pc.uid_a as dest_id,pc.uid_b as src_id ,ui.username,0 as isGroup FROM private_chat as pc
        INNER JOIN user_info as ui ON ui.uid = pc.uid_a
        WHERE chat_id=#{chatId} AND uid_b = #{uid}
        UNION ALL
        SELECT pc.chat_id,pc.uid_b as dest_id,pc.uid_a as src_id,ui.username,0 as isGroup FROM private_chat as pc
        INNER JOIN user_info as ui ON ui.uid = pc.uid_b
        WHERE chat_id=#{chatId} AND pc.uid_a = #{uid}
        LIMIT 1
    </select>

    <select id="selectPrivateChatNewMsgSize" resultMap="chatNewMsgSizeMap">
        SELECT chat_id, COUNT(*) as new_msg_size FROM pri_msg_record WHERE to_uid=#{uid} AND has_read=0
        AND chat_id in
        <foreach item="chat" index="index" collection="chatList" open="(" separator="," close=")">
            #{chat.talkId}
        </foreach>
        GROUP BY chat_id
    </select>

    <select id="selectPrivateChatTitleName" resultType="java.lang.String">
        SELECT username FROM private_chat as pc
        INNER JOIN user_info as ui ON ui.uid = pc.uid_a
        WHERE chat_id=#{chatId} AND uid_b = #{uid}
        UNION ALL
        SELECT username FROM private_chat as pc
        INNER JOIN user_info as ui ON ui.uid = pc.uid_b
        WHERE chat_id=#{chatId} AND uid_a = #{uid}
        LIMIT 1
    </select>

    <select id="selectChatGroupInfoByChatId" resultMap="chatGroupInfoMap">
        SELECT * FROM chat_group WHERE chat_id = #{chatId} AND status=1
    </select>


    <select id="countAllHistoryMsg" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM pri_msg_record
        WHERE chat_id = #{chatId} AND status = 1 AND created_time &lt; #{beginTime}
    </select>

    <insert id="insertNewPrivateChat" parameterType="com.allen.imsystem.model.pojo.PrivateChat">
        INSERT INTO private_chat (chat_id, uid_a, uid_b, user_a_status, user_b_status, last_msg_id,last_sender_id, created_time, update_time)
        VALUES (#{chatId},#{uidA},#{uidB},#{userAStatus},#{userBStatus},#{lastMsgId},#{lastSenderId},NOW(),NOW())
    </insert>


    <!--插入一条私聊消息到私聊消息记录    -->
    <insert id="insertPrivateMsgToRecord" parameterType="com.allen.imsystem.model.pojo.PrivateMsgRecord" >
        INSERT INTO pri_msg_record (msg_id, msg_type, chat_id, from_uid, to_uid, content, has_read, status)
        values (#{msgId},#{msgType},#{chatId},#{fromUid},#{toUid},#{content},#{hasRead},#{status})
    </insert>

    <update id="updatePrivateChat" parameterType="com.allen.imsystem.model.pojo.PrivateChat">
        UPDATE private_chat
        <set>
            <if test="chatId!=null">chat_id=#{chatId},</if>
            <if test="uidA!=null">uid_a=#{uidA},</if>
            <if test="uidB!=null">uid_b=#{uidB},</if>
            <if test="userAStatus!=null">user_a_status=#{userAStatus},</if>
            <if test="userBStatus!=null">user_b_status=#{userBStatus},</if>
            <if test="lastMsgId!=null">last_msg_id=#{lastMsgId},</if>
            <if test="lastSenderId!=null">last_sender_id=#{lastSenderId},</if>
            <if test="createdTime!=null">created_time=#{createdTime},</if>
            <if test="updateTime!=null">update_time=#{updateTime}</if>
        </set>
        WHERE chat_id=#{chatId}
    </update>

    <update id="updatePrivateChatLastMsg" >
        UPDATE private_chat SET last_msg_id = #{msgId} ,last_sender_id = #{lastSenderId}, update_time=NOW()
        WHERE chat_id = #{chatId}
    </update>

<!--    更新某一会话的所有聊天记录-->
    <update id="updatePrivateMsgRecordByChatId">
        UPDATE msg_record
        <set>
            <if test="hasRead!=null">has_read=#{hasRead},</if>
            <if test="status!=null">status=#{status},</if>
            <if test="updateTime!=null">update_time=#{updateTime},</if>
        </set>
        WHERE chat_id=#{chatId}
    </update>

<!--    标记所有某私聊所有信息已读-->
    <update id="setAllPrivateChatMsgHasRead">
        UPDATE pri_msg_record SET has_read = 1 WHERE chat_id=#{chatId} AND to_uid=#{uid}
    </update>

    <delete id="hardDeletePrivateChat">
        DELETE FROM private_chat WHERE uid_a=#{uidA} AND uid_b=#{uidB}
    </delete>
    
</mapper>